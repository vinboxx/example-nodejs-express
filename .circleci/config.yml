version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  test:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm test
  ship:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: "Build docker image and push to docker hub"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              cp Dockerfile.production Dockerfile
              docker build -t vinboxx/demo2:latest .
              docker build -t vinboxx/demo2:${CIRCLE_SHA1} .
              docker push vinboxx/demo2:latest
              docker push vinboxx/demo2:${CIRCLE_SHA1}
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
              docker build -t vinboxx/demo2_staging:latest .
              docker push vinboxx/demo2_staging:latest
            else
              echo "This is ${CIRCLE_BRANCH}"
            fi
  deploy:
    docker:
      - image: circleci/node:8.11.1-stretch
    working_directory: ~/repo
    steps:
      - run:
          name: "Call to Rancher to deploy"
          command: |
            docker run --rm -it \
            -e CATTLE_ACCESS_KEY="$CATTLE_ACCESS_KEY" \
            -e CATTLE_SECRET_KEY="$CATTLE_SECRET_KEY" \
            -e CATTLE_URL="$CATTLE_URL" \
            etlweather/gaucho upgrade $RANCHER_EXAMPLE_NODEJS \
            --imageUuid 'docker:vinboxx/demo2:latest' \
            --batch_size 3 --start_first \
            --auto_complete --timeout 600 \
            /
      - run: echo Done
workflows:
  versions: 2
  build_ship_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - ship:
          requires:
            - build
            - test
      - deploy:
          type: approval
          requires:
            - build
            - test
            - ship
